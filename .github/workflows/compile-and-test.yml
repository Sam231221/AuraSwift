name: Compile and test

on:
  workflow_call:
    inputs:
      renderer-template:
        description: Define what vite template should be used to create renderer in case if renderer package doesn't exist
        required: false
        type: string
        default: ""
      app-version:
        required: true
        type: string
      distribution-channel:
        required: true
        type: string

defaults:
  run:
    shell: "bash"

permissions:
  contents: write
  id-token: write
  attestations: write

env:
  NODE_NO_WARNINGS: 1
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
  ELECTRON_DISABLE_GPU: 1
  ELECTRON_NO_SANDBOX: 1
  npm_config_audit: false
  npm_config_fund: false

jobs:
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/init-template-with-renderer
        name: Setup boilerplate
        with:
          renderer-template: ${{inputs.renderer-template}}
      - run: npm run typecheck -ws --if-present

  compile:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup MSBuild (Windows)
        uses: microsoft/setup-msbuild@v2

      - name: Setup Python for node-gyp
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Verify Windows build environment
        run: |
          echo "Build environment verification:"
          echo "MSBuild: $(msbuild -version | Select-Object -First 1)"
          echo "Python: $(python --version)"
          echo "Node.js: $(node --version)"
          echo "npm: $(npm --version)"
        shell: powershell

      - uses: ./.github/actions/init-template-with-renderer
        name: Setup boilerplate
        with:
          renderer-template: ${{inputs.renderer-template}}

      - run: npm version "${{inputs.app-version}}" --no-git-tag-version

      - name: Clean and rebuild native modules for Electron
        run: |
          echo "Cleaning previous builds..."
          if (Test-Path "dist") { Remove-Item -Recurse -Force dist }
          echo "Rebuilding native modules for Electron..."
          npx electron-rebuild --verbose
          echo "Electron rebuild completed"
        shell: powershell
        env:
          NODE_ENV: production

      - name: Build and compile Electron app
        run: npm run compile -- --publish never
        env:
          VITE_DISTRIBUTION_CHANNEL: ${{inputs.distribution-channel}}
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "Build completed. Checking output:"
          if (Test-Path "dist") { 
            dir dist -Recurse | Select-Object FullName | Format-Table -AutoSize
          } else { 
            echo "ERROR: No dist directory found after build!"
            exit 1
          }
        shell: powershell

      - name: Install Playwright
        run: npx playwright install --with-deps
        if: hashFiles('tests/**') != ''

      - name: Debug build output structure
        if: hashFiles('tests/**') != ''
        run: |
          echo "Current directory contents:"
          dir
          echo "Dist directory contents:"
          if (Test-Path "dist") { dir dist -Recurse } else { echo "No dist directory found" }
          echo "Looking for executables:"
          if (Test-Path "dist") { dir dist -Recurse -Include "*.exe", "*.app" } else { echo "No executables found" }
        shell: powershell

      - name: Pre-test native module verification
        if: hashFiles('tests/**') != ''
        run: |
          echo "Verifying native modules are properly built..."
          if (Test-Path "node_modules/better-sqlite3/build") {
            echo "better-sqlite3 native build found"
            dir "node_modules/better-sqlite3/build" -Recurse
          } else {
            echo "WARNING: better-sqlite3 native build not found"
          }
        shell: powershell

      - name: Run tests
        run: npm run test --if-present
        if: hashFiles('tests/**') != ''
        env:
          CI: true
          NODE_ENV: test
          ELECTRON_DISABLE_GPU: 1
          ELECTRON_NO_SANDBOX: 1
          PLAYWRIGHT_HEADLESS: 1
          DEBUG: playwright:*

      - uses: actions/attest-build-provenance@v3
        with:
          subject-path: "dist/root*, dist/latest*.yml"

      - name: Upload compiled app
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{inputs.distribution-channel}}
          path: dist

# <type>(<scope>): <subject>

# |<---- Using a Maximum Of 50 Characters ---->|

# Explain why this change is being made

# |<---- Try To Limit Each Line to a Maximum Of 72 Characters ---->|

# Provide links or keys to any relevant tickets, articles or other resources

# Example: Github issue #23

# --- COMMIT END ---

# Type can be

# feat (new feature)

# fix (bug fix)

# refactor (refactoring production code)

# style (formatting, missing semicolons, etc; no code change)

# docs (changes to documentation)

# test (adding or refactoring tests; no production code change)

# chore (updating build tasks, package manager configs, etc; no production code change)

# perf (performance improvement)

# --------------------

# Scope should be one of:

# sales, inventory, auth, schedule, drawer, printer, user, settings,

# database, api, ui, e2e, build, ci

# --------------------

# Subject should use imperative tone and say what you did.

# Examples: "add feature X", "fix bug Y", "update docs for Z"

# NOT: "added feature", "fixing bug", "updates"

# --------------------

# Remember:

# \* Capitalize the subject line

# \* Use the imperative mood in the subject line

# \* Do not end the subject line with a period

# \* Separate subject from body with a blank line

# \* Use the body to explain what and why vs. how

# _ Can use multiple lines with "-" or "_" for bullet points in body

# --------------------

# For more information: https://www.conventionalcommits.org
